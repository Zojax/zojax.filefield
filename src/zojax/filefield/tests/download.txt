=============
Download File
=============

  >>> import transaction
  >>> from zojax.filefield.data import File
  >>> from zope.publisher.browser import TestRequest
  >>> from zope.testbrowser.testing import Browser

  >>> browser = Browser()
  >>> browser.addHeader("Authorization", "Basic mgr:mgrpw")
  >>> browser.handleErrors = False

  >>> f = File()
  >>> getRootFolder()['file'] = f
  >>> transaction.commit()

Headers
-------

By default is used filename attribute for content disposition
filename, and inline.

  >>> request = TestRequest()
  >>> results = f.show(request)
  >>> sorted(request.response.getHeaders()[-3:])
  [('Content-Disposition', 'inline; filename="file"'),
   ('Content-Length', '0'),
   ('Content-Type', 'text/plain')]

Note that a default content type of 'application/octet-stream' is
used.

If the file object specifies a content type, that's used in the headers
by default. Same for filename.

  >>> f.filename = 'test.txt'
  >>> f.mimeType = 'text/plain'
  >>> results = f.show(request)
  >>> sorted(request.response.getHeaders()[-3:])
  [('Content-Disposition', 'inline; filename="test.txt"'),
   ('Content-Length', '0'),
   ('Content-Type', 'text/plain')]

We can override filename and content disposition

  >>> results = f.show(request, 'document.txt', 'attachment')
  >>> sorted(request.response.getHeaders()[-3:])
  [('Content-Disposition', 'attachment; filename="document.txt"'),
   ('Content-Length', '0'),
   ('Content-Type', 'text/plain')]


Body
----

We use DownloadResult to deliver the content to the browser.  Since
there's no data in this file, there are no body chunks:

  >>> transaction.commit()
  >>> from zojax.filefield.data import DownloadResult
  >>> result = DownloadResult(f)
  >>> list(result)
  []

We still need to see how non-empty files are handled.  Let's write
some data to our file object:

  >>> w = f.open("w")
  >>> w.write("some text")
  >>> w.flush()
  >>> w.close()
  >>> transaction.commit()

Now we can create a result object and see if we get the data we
expect:

  >>> result = DownloadResult(f)
  >>> L = list(result)
  >>> "".join(L)
  'some text'

If the body content is really large, the iterator may provide more
than one chunk of data:

  >>> w = f.open("w")
  >>> w.write("*" * 1024 * 1024)
  >>> w.flush()
  >>> w.close()
  >>> transaction.commit()

  >>> result = DownloadResult(f)
  >>> L = list(result)
  >>> len(L) > 1
  True

Once iteration over the body has completed, further iteration will not
yield additional data:

  >>> list(result)
  []


The Download View
-----------------

Now that we've seen the ``getHeaders`` function and the result object,
let's take a look at the basic download view that uses them.  We'll need
to add a file object where we can get to it using a browser:

  >>> f = File()
  >>> f.mimeType = "text/plain"
  >>> f.filename = 'abcdefg'
  >>> w = f.open("w")
  >>> w.write("some text")
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["abcdefg"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /abcdefg/@@index.html HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg"
  Content-Length: 9
  Content-Type: text/plain
  Last-Modified: ...
  <BLANKLINE>
  some text


The Preview View
-----------------

PDF

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "application/pdf"
  >>> f.filename = 'abcdefg'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.pdf")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-pdf"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-pdf/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg"
  Content-Length: 708
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...


ODT

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "application/vnd.oasis.opendocument.text"
  >>> f.filename = 'abcdefg.odt'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.odt")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-odt"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-odt/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg.odt"
  Content-Length: 746
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...

  >>> browser.open("http://localhost/previewed-odt/@@preview.html")
  >>> print browser.contents
  <html>
  <head>
  <script type="text/javascript" src=".../jquery.js"></script>
  <script type="text/javascript" src=".../jquery-plugins.js"></script>
  ...
  </head>
  <body>
    ...
    ...<script type="text/javascript"> var preview_url=$('HEAD').attr('base') + 'preview'; viewer_url='http://localhost/@@/filefield/FlexPaperViewer.swf'</script>...
    ...
    </body>
    </html>


RTF

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "application/rtf"
  >>> f.filename = 'abcdefg.rtf'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.rtf")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-rtf"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-rtf/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg.rtf"
  Content-Length: 769
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...

XLS

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "application/vnd.ms-excel"
  >>> f.filename = 'abcdefg.xls'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.xls")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-xls"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-xls/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg.xls"
  Content-Length: 20718
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...

XLSX

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
  >>> f.filename = 'abcdefg.xlsx'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.xlsx")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-xlsx"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-xlsx/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg.xlsx"
  Content-Length: 20688
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...

ODS

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "application/vnd.oasis.opendocument.spreadsheet"
  >>> f.filename = 'abcdefg.ods'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.ods")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-ods"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-ods/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg.ods"
  Content-Length: 16892
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...
  

TXT

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "text/plain"
  >>> f.filename = 'abcdefg'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "test.txt")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-txt"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-txt/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg"
  Content-Length: ...
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...

GIF

  >>> from zojax.filefield import tests
  >>> import os.path
  >>> f = File()
  >>> f.mimeType = "image/gif"
  >>> f.filename = 'abcdefg'
  >>> w = f.open("w")
  >>> w.write(open(os.path.join(os.path.dirname(tests.__file__), "image.gif")).read())
  >>> w.close()
  >>> transaction.commit()

  >>> getRootFolder()["previewed-gif"] = f

  >>> transaction.commit()

Now, let's request the download view of the file object and check the
result:

  >>> print http("""
  ... GET /previewed-txt/@@preview HTTP/1.1
  ... Authorization: Basic mgr:mgrpw
  ... """, handle_errors=False)
  HTTP/1.1 200 Ok
  Content-Disposition: inline; filename="abcdefg"
  Content-Length: ...
  Content-Type: application/x-shockwave-flash
  Last-Modified: ...
  <BLANKLINE>
  CWS ...
